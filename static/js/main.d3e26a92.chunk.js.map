{"version":3,"sources":["components/Header/Navigation.jsx","components/Header/header.jsx","redux/baseUrl.js","components/Body/MenuItem.jsx","components/Body/Loading.jsx","components/Body/loadComment.jsx","components/Body/CommentForm.jsx","components/Body/dishDetails.jsx","redux/actionTypes.js","redux/actionCreators.js","components/Body/Menu.jsx","components/Body/Home.jsx","components/Body/About.jsx","components/Body/Contact.jsx","components/Body/body.jsx","components/Footer/footer.jsx","components/mainComponent.jsx","redux/reducer.js","redux/form.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","state","isOpen","toggle","setState","Navbar","dark","color","expand","className","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","to","Component","Header","baseURL","MenuItem","props","Card","style","cursor","DishSelect","CardBody","CardImg","widt","alt","dish","name","src","image","opacity","CardImgOverlay","CardTitle","Loading","padding","LoadComments","comentIsLoading","comment","map","comments","author","rating","Dateformat","date","id","CommentForm","handleInput","event","target","value","handleSubmit","preventDefault","addComment","dishId","reset","bind","Form","onSubmit","Input","type","palceholder","onChange","required","placeholder","Button","DishDetails","top","width","CardText","description","category","label","price","commentIsLoading","ADD_COMMENT","LOAD_COMMENTS","COMMENT_LOADING","LOAD_DISHES","DISHES_LOADING","DISHES_FAILED","commentConcat","actionTypes","payload","fetchComments","dispatch","axios","get","then","response","data","loadComments","fetchDishes","dishes","loadDishes","catch","error","errorMessage","message","Menu","selectDish","modalOpen","onDish","toggleModal","document","title","isLoading","Alert","menu","item","dishDetail","filter","commentsIsLoading","CardColumns","Modal","ModalBody","ModalFooter","connect","newComment","Date","toISOString","post","Home","About","val","length","isNumber","isNaN","Number","validEmail","test","Contact","alertShow","alertText","alertType","values","status","setTimeout","resetFeedbackForm","paddingLeft","textAlign","model","FormGroup","row","Label","htmlFor","md","Col","text","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","actions","Body","path","exact","render","from","Footer","MainComponent","Reducer","combineReducers","dishState","action","commentState","concat","createForms","feedback","firstname","lastname","telnum","email","agree","contactType","myStore","createStore","applyMiddleware","logger","thunk","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d3e26a92.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavItem,\r\n  Nav,\r\n  NavbarToggler,\r\n  Collapse,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar dark color=\"dark\" expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarBrand href=\"/home\">Bohubrihi Restaurant</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink to=\"/home\" className=\"nav-link\">\r\n                    Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/menu\" className=\"nav-link\">\r\n                    Menu\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/about\" className=\"nav-link\">\r\n                    About\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/contact\" className=\"nav-link\">\r\n                    Contact\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport Navigation from './Navigation.jsx';\r\nconst Header=()=>{\r\n    return(\r\n        <div>\r\n            <Navigation/>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","export const baseURL = \"http://localhost:3001/\";\r\n","import React from \"react\";\r\nimport { Card, CardImg, CardImgOverlay, CardBody, CardTitle } from \"reactstrap\";\r\nimport { baseURL } from \"../../redux/baseUrl\";\r\nconst MenuItem = (props) => {\r\n  return (\r\n    <div>\r\n      <Card\r\n        className=\"my-3\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={props.DishSelect}\r\n      >\r\n        <CardBody>\r\n          <CardImg\r\n            widt=\"100%\"\r\n            alt={props.dish.name}\r\n            src={baseURL + props.dish.image}\r\n            style={{ opacity: \"0.5\" }}\r\n          />\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"text-center\">{props.dish.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default MenuItem;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"col-12 text-center\" style={{ padding: \"60px\" }}>\r\n      <span className=\"fa fa-spinner fa-5x fa-fw fa-pulse text-warning\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport Loading from \"./Loading\";\r\nimport Dateformat from \"dateformat\";\r\n\r\nconst LoadComments = (props) => {\r\n  if (props.comentIsLoading) {\r\n    return <Loading />;\r\n  } else {\r\n    return props.comment.map((comments) => {\r\n      return (\r\n        <div key={comments.id}>\r\n          <h5>{comments.author}</h5>\r\n          <p>{comments.comment}</p>\r\n          <p>Rating: {comments.rating}* </p>\r\n          <p>{Dateformat(comments.date, \"dddd, mmmm dS, yyyy, h:MM TT\")}</p>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n};\r\nexport default LoadComments;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Input } from \"reactstrap\";\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      author: \"\",\r\n      rating: \"\",\r\n      comment: \"\",\r\n    };\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleInput = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    // console.log(this.state);\r\n    event.preventDefault();\r\n    this.props.addComment(\r\n      this.props.dishId,\r\n      this.state.author,\r\n      this.state.rating,\r\n      this.state.comment\r\n    );\r\n    // this.props.dispatch({\r\n    //   type: \"ADD_COMMENT\",\r\n    //   payload: {\r\n    //     dishId: this.props.dishId,\r\n    //     author: this.state.author,\r\n    //     rating: this.state.rating,\r\n    //     comment: this.state.comment,\r\n    //   },\r\n\r\n    this.setState({\r\n      author: \"\",\r\n      rating: \"\",\r\n      comment: \"\",\r\n    });\r\n    event.target.reset();\r\n  };\r\n  render() {\r\n    //console.log(this.props);\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"author\"\r\n            value={this.state.author}\r\n            palceholder=\"Enter your name\"\r\n            onChange={this.handleInput}\r\n            required\r\n          />\r\n          <br />\r\n          <Input\r\n            type=\"select\"\r\n            name=\"rating\"\r\n            value={this.state.rating}\r\n            onChange={this.handleInput}\r\n          >\r\n            <option>1</option>\r\n            <option>2</option>\r\n            <option>3</option>\r\n            <option>4</option>\r\n            <option>5</option>\r\n          </Input>\r\n          <br />\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"comment\"\r\n            value={this.state.comment}\r\n            placeholder=\"Your comment\"\r\n            onChange={this.handleInput}\r\n            required\r\n          ></Input>\r\n          <br />\r\n          <Button type=\"submit\">Submit Comment</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CommentForm;\r\n","import React from \"react\";\r\nimport { Card, CardImg, CardBody, CardTitle, CardText } from \"reactstrap\";\r\nimport LoadComments from \"./loadComment.jsx\";\r\nimport CommentForm from \"./CommentForm.jsx\";\r\nimport { baseURL } from \"../../redux/baseUrl\";\r\n\r\nconst DishDetails = (props) => {\r\n  return (\r\n    <div>\r\n      <Card className=\"my-3\">\r\n        <CardImg\r\n          top\r\n          src={baseURL + props.dish.image}\r\n          alt={props.dish.name}\r\n          width=\"100%\"\r\n        />\r\n        <CardBody className=\"text-left\">\r\n          <CardTitle>{props.dish.name}</CardTitle>\r\n          <CardText>{props.dish.description}</CardText>\r\n          <CardText> Category : {props.dish.category} </CardText>\r\n          <CardText>Lable : {props.dish.label}</CardText>\r\n          <CardText>Price : {props.dish.price} Taka</CardText>\r\n          <hr />\r\n          <LoadComments\r\n            comment={props.comments}\r\n            commentIsLoading={props.commentIsLoading}\r\n          />\r\n          <hr />\r\n          <CommentForm dishId={props.dish.id} addComment={props.addComment} />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DishDetails;\r\n","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const LOAD_COMMENTS = \"LOAD_COMMENTS\";\r\nexport const COMMENT_LOADING = \"COMMENT_LOADING\";\r\nexport const LOAD_DISHES = \"LOAD_DISHES\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport { baseURL } from \"./baseUrl\";\r\nimport axios from \"axios\";\r\n\r\nexport const addComment = (dishId, author, rating, comment) => (dispatch) => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    author: author,\r\n    rating: rating,\r\n    comment: comment,\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n  axios\r\n    .post(baseURL + \"comments\", newComment)\r\n    .then((response) => response.data)\r\n    .then((comment) => dispatch(commentConcat(comment)));\r\n};\r\nexport const commentConcat = (comment) => ({\r\n  type: actionTypes.ADD_COMMENT,\r\n  payload: comment,\r\n});\r\nexport const commentLoading = () => {\r\n  return {\r\n    type: actionTypes.COMMENT_LOADING,\r\n  };\r\n};\r\nexport const loadComments = (comments) => {\r\n  return {\r\n    type: actionTypes.LOAD_COMMENTS,\r\n    payload: comments,\r\n  };\r\n};\r\nexport const fetchComments = () => (dispatch) => {\r\n  dispatch(commentLoading());\r\n  axios\r\n    .get(baseURL + \"comments\")\r\n    .then((response) => response.data)\r\n    .then((comments) => dispatch(loadComments(comments)));\r\n};\r\nexport const loadDishes = (dishes) => ({\r\n  type: actionTypes.LOAD_DISHES,\r\n  payload: dishes,\r\n});\r\nexport const dishesLoading = () => ({\r\n  type: actionTypes.DISHES_LOADING,\r\n});\r\nexport const dishesFailed = (errorMessage) => ({\r\n  type: actionTypes.DISHES_FAILED,\r\n  payload: errorMessage,\r\n});\r\nexport const fetchDishes = () => {\r\n  return (dispatch) => {\r\n    dispatch(dishesLoading());\r\n    // setTimeout(() => dispatch(loadDishes(DISHES)), 1000);\r\n    axios\r\n      .get(baseURL + \"dishes\")\r\n      .then((response) => response.data)\r\n      .then((dishes) => dispatch(loadDishes(dishes)))\r\n      .catch((error) => dispatch(dishesFailed(error.message)));\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport MenuItem from \"./MenuItem.jsx\";\r\nimport DishDetails from \"./dishDetails.jsx\";\r\nimport { CardColumns, Modal, ModalBody, ModalFooter, Alert } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addComment,\r\n  fetchDishes,\r\n  fetchComments,\r\n} from \"../../redux/actionCreators.js\";\r\nimport Loading from \"./Loading.jsx\";\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addComment: (dishId, author, rating, comment) =>\r\n      dispatch(addComment(dishId, author, rating, comment)),\r\n    fetchDishes: () => dispatch(fetchDishes()),\r\n    fetchComments: () => dispatch(fetchComments()),\r\n  };\r\n};\r\nclass Menu extends Component {\r\n  state = {\r\n    selectDish: null,\r\n    modalOpen: false,\r\n  };\r\n  onDish = (dish) => {\r\n    this.setState({ selectDish: dish, modalOpen: !this.state.modalOpen });\r\n  };\r\n  toggleModal = () => {\r\n    this.setState({ modalOpen: !this.state.modalOpen });\r\n  };\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n  }\r\n  render() {\r\n    document.title = \"Menu\";\r\n    if (this.props.dishes.isLoading) {\r\n      return <Loading />;\r\n    } else if (this.props.dishes.errorMessage != null) {\r\n      return <Alert color=\"danger\">{this.props.dishes.errorMessage}</Alert>;\r\n    } else {\r\n      const menu = this.props.dishes.dishes.map((item) => {\r\n        return (\r\n          <MenuItem\r\n            dish={item}\r\n            key={item.id}\r\n            DishSelect={() => this.onDish(item)}\r\n          />\r\n        );\r\n      });\r\n      let dishDetail = null;\r\n      if (this.state.selectDish != null) {\r\n        const comments = this.props.comments.comments.filter((comment) => {\r\n          return comment.dishId === this.state.selectDish.id;\r\n        });\r\n        dishDetail = (\r\n          <DishDetails\r\n            dish={this.state.selectDish}\r\n            comments={comments}\r\n            addComment={this.props.addComment}\r\n            commentsIsLoading={this.props.comments.isLoading}\r\n          />\r\n        );\r\n      }\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <CardColumns>{menu}</CardColumns>\r\n            <Modal isOpen={this.state.modalOpen}>\r\n              <ModalBody>{dishDetail}</ModalBody>\r\n              <ModalFooter>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.toggleModal}\r\n                >\r\n                  Close\r\n                </button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import React, { Component } from \"react\";\r\nimport Loading from \"./Loading\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    document.title = \"Bohubrihi Restaurant\";\r\n    return (\r\n      <div className=\"container text-center\">\r\n        <Loading />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nconst About = () => {\r\n  document.title = \"About\";\r\n  return <div></div>;\r\n};\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { Button, FormGroup, Label, Col } from \"reactstrap\";\r\nimport { Form, Control, Errors, actions } from \"react-redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../../redux/baseUrl\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    resetFeedbackForm: () => {\r\n      dispatch(actions.reset(\"feedback\"));\r\n    },\r\n  };\r\n};\r\n\r\nconst required = (val) => val && val.length;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    alertShow: false,\r\n    alertText: null,\r\n    alertType: null,\r\n  };\r\n  handleSubmit = (values) => {\r\n    //console.log(values);\r\n    axios\r\n      .post(baseURL + \"feedback\", values)\r\n      .then((response) => response.status)\r\n      .then((status) => {\r\n        if (status === 201) {\r\n          this.setState({\r\n            alertShow: true,\r\n            alertText: \"Submitted Successfully\",\r\n            alertType: \"success\",\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              alertShow: false,\r\n            });\r\n          }, 2000);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          alertShow: true,\r\n          alertText: error.message,\r\n          alertType: \"danger\",\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alertShow: false,\r\n          });\r\n        }, 2000);\r\n      });\r\n    this.props.resetFeedbackForm();\r\n  };\r\n\r\n  render() {\r\n    document.title = \"Contact\";\r\n    return (\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"row row-content\"\r\n          style={{ paddingLeft: \"20px\", textAlign: \"left\" }}\r\n        >\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n            <Alert isOpen={this.state.alertShow} color={this.state.alertType}>\r\n              {this.state.alertText}\r\n            </Alert>\r\n          </div>\r\n          <div className=\"col-12 col-md-7\">\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <FormGroup row>\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required, \",\r\n                      isNumber: \"Invalid Number!\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required, \",\r\n                      validEmail: \"Invalid Email!\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <FormGroup check>\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    name=\"message\"\r\n                    model=\".message\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".message\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: \"Required\",\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);\r\n","import React from \"react\";\r\nimport Menu from \"./Menu.jsx\";\r\n\r\nimport Home from \"./Home.jsx\";\r\nimport About from \"./About.jsx\";\r\nimport Contact from \"./Contact.jsx\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nconst Body = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/home\" exact render={() => <Home />} />\r\n        <Route path=\"/menu\" exact render={() => <Menu />} />\r\n        <Route path=\"/about\" exact render={() => <About />} />\r\n        <Route path=\"/contact\" exact render={() => <Contact />} />\r\n        <Redirect from=\"/\" to=\"/home\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\nexport default Body;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center row-contet\">\r\n          <div className=\"col-auto\">\r\n            <p>Bohubrihi Restaurant &#169; Copyright 2021</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Header from './Header/header.jsx';\r\nimport Body from './Body/body.jsx';\r\nimport Footer from './Footer/footer.jsx';\r\n\r\nconst MainComponent=()=>{\r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <Body/>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\nexport default MainComponent;","// import COMMENTS from \"../data/comments\";\r\nimport * as actionTypes from \"./actionTypes\";\r\nimport { initialContactForm } from \"./form.js\";\r\nimport { createForms } from \"react-redux-form\";\r\nimport { combineReducers } from \"redux\";\r\n// const initialState = {\r\n//   dishes: DISHES,\r\n//   comments: COMMENTS,\r\n// };\r\nconst dishReducer = (\r\n  dishState = { isLoading: false, dishes: [], errorMessage: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case actionTypes.DISHES_LOADING:\r\n      return {\r\n        ...dishState,\r\n        isLoading: true,\r\n        dishes: [],\r\n        errorMessage: null,\r\n      };\r\n    case actionTypes.LOAD_DISHES:\r\n      return {\r\n        ...dishState,\r\n        isLoading: false,\r\n        dishes: action.payload,\r\n        errorMessage: null,\r\n      };\r\n    case actionTypes.DISHES_FAILED:\r\n      return {\r\n        ...dishState,\r\n        isLoading: false,\r\n        dishes: [],\r\n        errorMessage: action.payload,\r\n      };\r\n    default:\r\n      return dishState;\r\n  }\r\n};\r\nconst commentReducer = (\r\n  commentState = { isLoading: false, comments: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_COMMENTS:\r\n      return {\r\n        ...commentState,\r\n        isLoading: false,\r\n        comments: action.payload,\r\n      };\r\n    case actionTypes.COMMENT_LOADING:\r\n      return {\r\n        ...commentState,\r\n        isLoading: true,\r\n        comments: [],\r\n      };\r\n    case actionTypes.ADD_COMMENT:\r\n      let comment = action.payload;\r\n      return {\r\n        ...commentState,\r\n        comments: commentState.comments.concat(comment),\r\n      };\r\n    default:\r\n      return commentState;\r\n  }\r\n};\r\nexport const Reducer = combineReducers({\r\n  dishes: dishReducer,\r\n  comments: commentReducer,\r\n  ...createForms({\r\n    feedback: initialContactForm,\r\n  }),\r\n});\r\n","export const initialContactForm = {\r\n  firstname: \"\",\r\n  lastname: \"\",\r\n  telnum: \"\",\r\n  email: \"\",\r\n  agree: false,\r\n  contactType: \"Tel.\",\r\n  message: \"\",\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { Reducer } from \"./reducer.js\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nconst myStore = createStore(Reducer, applyMiddleware(logger, thunk));\r\n\r\nexport default myStore;\r\n","import React from \"react\";\nimport MainComponent from \"./components/mainComponent.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport myStore from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  // console.log(\"app.js:\", myStore.getState());\n  return (\n    <div className=\"App\">\n      <Provider store={myStore}>\n        <Router>\n          <MainComponent />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}